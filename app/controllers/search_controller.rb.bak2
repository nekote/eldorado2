class SearchController < ApplicationController
    
  def index

      u_cond = " "  # no additional conditional clause added is default
      st_cond = " "
      et_cond = " "
      uid = []

    if [1799,1944,1945,1946,1947,1948].include?(current_user.id)

      if params[:lnames] then
        ulist = params[:lnames].split(",").each {|l| l.strip!}
        ulist.each do |u|
          @user = User.find_by_login(u)
          uid += [@user.id] if @user
        end
        uid = [-1] if uid.empty?    # 1 or more user names offered, none found, hack so search finds nothing
        u_cond = ' AND user_id IN(' + uid.join(",") + ') '
      end

      if !params[:interval].blank? && params[:interval].downcase != 'all'
        if params[:interval].to_i >= 1 && params[:interval].to_i <=15000   # .to_i returns 0 if error
          stime = Time.now.utc - 86400 * params[:interval].to_i
        else
# add flash some error either not integer or not >= 1 && <= 15000 and set 1 day as substitute
          stime = Time.now.utc - 86400
        end
        st_cond = " AND created_at >= '" + stime.strftime('%F') + "' " if stime != " "
      end

      if !params[:start_time].blank? && params[:start_time].downcase != 'all'  # last if over rides 'interval'
        st_cond = " AND created_at >= '" + params[:start_time] + "' "
      end

      if !params[:end_time].blank? && params[:end_time].downcase != 'now'
        et_cond = " AND created_at <= '" + params[:end_time] + "' "
      end
    else
    end

    if params[:type].blank? || params[:query].blank?
      render :template => 'search/index'
    elsif params[:type] == 'articles'
      @articles = Article.all(:include => :user, :order => 'created_at desc', :conditions => ['title LIKE ? OR body LIKE ?', '%'+params[:query]+'%', '%'+params[:query]+'%'])
      render :template => 'articles/archives'
    elsif params[:type] == 'avatars'
      @avatars = Avatar.paginate(:page => params[:page], :include => :user, :order => 'avatars.created_at desc', :conditions => ['filename LIKE ?', '%' + params[:query] + '%'])        
      render :template => 'avatars/index'
    elsif params[:type] == 'events'
      @events = Event.paginate(:page => params[:page], :include => :user, :order => 'events.created_at desc', :conditions => ['title LIKE ?', '%' + params[:query] + '%'])        
      render :template => 'events/index'
    elsif params[:type] == 'files'
      @uploads = Upload.paginate(:page => params[:page], :include => :user, :order => 'uploads.created_at desc', :conditions => ['filename LIKE ?', '%' + params[:query] + '%'])        
      render :template => 'uploads/index'
    elsif params[:type] == 'headers'
      @headers = Header.paginate(:page => params[:page], :include => :user, :order => 'headers.created_at desc', :conditions => ['filename LIKE ?', '%' + params[:query] + '%'])        
      render :template => 'headers/index'
    elsif params[:type] == 'messages'
      @messages = Message.paginate(:page => params[:page], :include => :user, :order => 'messages.created_at desc', :conditions => ['body LIKE ?', '%' + params[:query] + '%'])        
      render :template => 'search/messages'
    elsif params[:type] == 'posts'
      @posts = Post.paginate(:page => params[:page], :include => [:user, :topic], :order => 'posts.created_at desc', :conditions => ['body LIKE ?', '%' + params[:query] + '%'])        
      render :template => 'topics/show'
    elsif params[:type] == 'topics'
      @topics = Topic.paginate(:page => params[:page], :include => [:user, :last_poster], :order => 'sticky desc, last_post_at desc', :conditions => ['title LIKE ?', '%' + params[:query] + '%'])
      render :template => 'topics/index'
    elsif params[:type] == 'users'
      @users = User.paginate(:page => params[:page], :order => 'created_at desc', :conditions => ['login LIKE ?', '%' + params[:query] + '%'])        
      render :template => 'users/index'
    elsif params[:type] == 'messages2'
      @messages = Message.paginate(:page => params[:page], :include => :user, :order => 'messages.created_at desc', :conditions => ['body LIKE ?' + u_cond.to_s + st_cond.to_s + et_cond.to_s, '%' + params[:query] + '%'])        
      if admin? then render :template => 'search/messages'
      else render :template => 'search/messages2'
      end
    elsif params[:type] == 'posts2'
      @posts = Post.paginate(:page => params[:page], :include => [:user, :topic], :order => 'posts.created_at desc', :conditions => ['body LIKE ?' + u_cond.to_s + st_cond.to_s + et_cond.to_s, '%' + params[:query] + '%'])        
      render :template => 'topics/show'
    elsif params[:type] == 'topics2'
      @topics = Topic.paginate(:page => params[:page], :include => [:user, :last_poster], :order => 'sticky desc, last_post_at desc', :conditions => ['title LIKE ?' + u_cond.to_s + st_cond.to_s + et_cond.to_s, '%' + params[:query] + '%'])
      render :template => 'topics/index'
    end
  end  
end
